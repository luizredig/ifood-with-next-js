generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id                  String                   @id @default(uuid())
  name                String
  imageUrl            String
  deliveryFee         Decimal                  @db.Decimal(10, 2)
  deliveryTimeMinutes Int
  categories          Category[]
  products            Product[]
  orders              Order[]
  // usersWhoFavorited   UserFavoriteRestaurant[]
}

// model UserFavoriteRestaurant {
//   userId       String
//   user         User       @relation(fields: [userId], references: [id])
//   restaurantId String
//   restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
//   createdAt    DateTime   @default(now())

//    @@id([userId, restaurantId])
// }

model Category {
  id          String       @id @default(uuid())
  name        String
  imageUrl    String
  restaurants Restaurant[]
  products    Product[]
  createdAt   DateTime     @default(now())
}

model Product {
  id                 String         @id @default(uuid())
  name               String
  description        String
  imageUrl           String
  price              Decimal        @db.Decimal(10, 2)
  discountPercentage Int            @default(0)
  restaurantId       String
  restaurant         Restaurant     @relation(fields: [restaurantId], references: [id])
  categoryId         String
  category           Category       @relation(fields: [categoryId], references: [id])
  createdAt          DateTime       @default(now())
  orderProducts      OrderProduct[]
}

model OrderProduct {
  id        String  @id @default(uuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model Order {
  id                  String         @id @default(uuid())
  userId              String
  // user                User           @relation(fields: [userId], references: [id])
  products            OrderProduct[]
  restaurant          Restaurant     @relation(fields: [restaurantId], references: [id])
  restaurantId        String
  deliveryFee         Decimal        @db.Decimal(10, 2)
  deliveryTimeMinutes Int
  subtotalPrice       Decimal        @db.Decimal(10, 2)
  totalPrice          Decimal        @db.Decimal(10, 2)
  totalDiscounts      Decimal        @db.Decimal(10, 2)
  createdAt           DateTime       @default(now())
  status              OrderStatus
}

enum OrderStatus {
  CONFIRMED
  CANCELED
  PREPARING
  DELIVERING
  COMPLETED
}
